{"version":3,"file":"static/js/29.a1c93afc.chunk.js","mappings":"gQAIaA,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,EAAPD,CAAH,sfA2BRE,IAJcF,EAAAA,EAAAA,SAAOG,EAAAA,EAAPH,CAAH,2BAIKA,EAAAA,EAAAA,SAAOI,EAAAA,GAAPJ,CAAH,+C,qBCe1B,IA9Ce,CACbK,KAAM,CACJC,MAAO,OACPD,KAAM,OACNE,QAAS,SACTC,KAAM,OACNC,YAAa,gBACbC,UAAU,GAEZC,MAAO,CACLL,MAAO,QACPD,KAAM,QACNE,QAAS,SACTC,KAAM,QACNC,YAAa,iBACbC,UAAU,GAEZE,SAAU,CACRN,MAAO,WACPD,KAAM,WACNE,QAAS,SACTC,KAAM,WACNC,YAAa,oBACbC,UAAU,GAEZG,QAAS,CACPP,MAAO,UACPD,KAAM,OACNE,QAAS,SACTC,KAAM,OACNC,YAAa,uBACbC,UAAU,EACVI,QAAS,yHACTC,MAAO,0IAETC,OAAQ,CACNV,MAAO,SACPD,KAAM,SACNE,QAAS,SACTC,KAAM,MACNC,YAAa,sBACbC,UAAU,EACVK,MAAO,gG,mGCxCEE,EAAU,SAACC,EAAcC,GAClC,OAA0BC,EAAAA,EAAAA,WAAS,UAAIF,IAAvC,eAAOG,EAAP,KAAcC,EAAd,KAYA,MAAO,CAACD,MAAAA,EAAOE,aAVM,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBF,GAAS,SAAAG,GACL,IAAQpB,EAAemB,EAAfnB,KAAMqB,EAASF,EAATE,MACd,OAAO,kBAAKD,GAAZ,cAAwBpB,EAAOqB,GAClC,GACJ,EAK4BC,aAJR,SAACC,GAClBA,EAAEC,iBACFV,GAAS,UAAKE,GACjB,EAEJ,C,yKCuCD,EAtCkB,WAChB,IAAMS,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MAMjB,GAA8CjB,EAAAA,EAAAA,GAC5C,CAAEN,MAAO,GAAIC,SAAU,KALR,SAAAuB,GACfF,GAASG,EAAAA,EAAAA,IAAOD,GACjB,IAEOd,EAAR,EAAQA,MAAOE,EAAf,EAAeA,aAAcI,EAA7B,EAA6BA,aAKrBhB,EAAoBU,EAApBV,MAAOC,EAAaS,EAAbT,SAIf,OAFAyB,QAAQC,IAAIjB,GAERS,GACK,SAAC,KAAD,CAAUS,GAAG,eAIpB,SAAC,KAAD,WACE,UAAC,KAAD,CAASpB,SAAUQ,EAAnB,WACE,SAAC,KAAD,qBACA,SAAC,MAAD,kBAAca,EAAAA,EAAAA,OAAd,IAA4Bd,MAAOf,EAAO8B,SAAUlB,MACpD,SAAC,MAAD,kBACMiB,EAAAA,EAAAA,UADN,IAEEd,MAAOd,EACP6B,SAAUlB,MAGZ,SAAC,KAAD,2BAIP,C","sources":["shared/components/Password/Password.styled.jsx","shared/utils/fields.js","shared/utils/hooks.js","views/LoginView/LoginView.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { OutlinedInput, TextField } from '@mui/material';\r\nimport { ButtonCss } from 'components/App/App.styled';\r\n\r\nexport const InputCss = styled(TextField)`\r\n  margin-bottom: 20px;\r\n  color: orange;\r\n  text-align: center;\r\n\r\n  &.MuiFormLabel-root {\r\n    color: orange;\r\n  }\r\n\r\n  .css-o943dk-MuiFormLabel-root-MuiInputLabel-root.Mui-focused {\r\n    color: orange;\r\n  }\r\n  .css-1ff8729-MuiInputBase-root-MuiFilledInput-root:hover:not(\r\n      .Mui-disabled,\r\n      .Mui-error\r\n    ):before {\r\n    border-bottom: 1px solid #000;\r\n  }\r\n  .css-1ff8729-MuiInputBase-root-MuiFilledInput-root:after {\r\n    border-bottom: 1px dashed orange;\r\n  }\r\n`;\r\n\r\nexport const PasswordCss = styled(OutlinedInput)`\r\n\r\n`;\r\n\r\nexport const AuthButtonCss = styled(ButtonCss)`\r\n    margin-top: 20px;\r\n`;\r\n\r\n","const fields = {\r\n  name: {\r\n    label: 'Name',\r\n    name: 'name',\r\n    variant: 'filled',\r\n    type: 'text',\r\n    placeholder: 'Enter name...',\r\n    required: true,\r\n  },\r\n  email: {\r\n    label: 'Email',\r\n    name: 'email',\r\n    variant: 'filled',\r\n    type: 'email',\r\n    placeholder: 'Enter email...',\r\n    required: true,\r\n  },\r\n  password: {\r\n    label: 'Password',\r\n    name: 'password',\r\n    variant: 'filled',\r\n    type: 'password',\r\n    placeholder: 'Enter password...',\r\n    required: true,\r\n  },\r\n  contact: {\r\n    label: 'Contact',\r\n    name: 'name',\r\n    variant: 'filled',\r\n    type: 'text',\r\n    placeholder: 'Enter the contact...',\r\n    required: true,\r\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n  },\r\n  number: {\r\n    label: 'Number',\r\n    name: 'number',\r\n    variant: 'filled',\r\n    type: 'tel',\r\n    placeholder: 'Enter the number...',\r\n    required: true,\r\n    title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n  },\r\n};\r\n\r\nexport default fields;","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState, onSubmit) => {\r\n    const [state, setState] = useState({...initialState});\r\n\r\n    const handleChange = ({ target }) => {\r\n        setState(prevState => {\r\n            const { name, value} = target;\r\n            return { ...prevState, [name]: value }\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit({ ...state });\r\n    }\r\n    return {state, handleChange, handleSubmit}\r\n}","import {\r\n  CenterCss,\r\n  FormCss,\r\n  TitleCss,\r\n} from 'components/App/App.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { signin } from 'redux/auth/auth-operations';\r\nimport { selectIsUserLogin } from 'redux/auth/auth-selectors';\r\nimport fields from 'shared/utils/fields';\r\nimport { useForm } from 'shared/utils/hooks';\r\n\r\nimport {\r\n  AuthButtonCss,\r\n  InputCss,\r\n} from 'shared/components/Password/Password.styled';\r\n\r\nconst LoginView = () => {\r\n  const isLogin = useSelector(selectIsUserLogin);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = data => {\r\n    dispatch(signin(data));\r\n  };\r\n\r\n  const { state, handleChange, handleSubmit } = useForm(\r\n    { email: '', password: '' },\r\n    onSubmit\r\n  );\r\n\r\n  const { email, password } = state;\r\n\r\n  console.log(state);\r\n\r\n  if (isLogin) {\r\n    return <Navigate to=\"/contacts\" />;\r\n  }\r\n\r\n  return (\r\n    <CenterCss>\r\n      <FormCss onSubmit={handleSubmit}>\r\n        <TitleCss>Login</TitleCss>\r\n        <InputCss {...fields.email} value={email} onChange={handleChange} />\r\n        <InputCss\r\n          {...fields.password}\r\n          value={password}\r\n          onChange={handleChange}\r\n        />\r\n        {/* <Password password={password} handleChange={handleChange} /> */}\r\n        <AuthButtonCss>Sign in!</AuthButtonCss>\r\n      </FormCss>\r\n    </CenterCss>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n"],"names":["InputCss","styled","TextField","AuthButtonCss","OutlinedInput","ButtonCss","name","label","variant","type","placeholder","required","email","password","contact","pattern","title","number","useForm","initialState","onSubmit","useState","state","setState","handleChange","target","prevState","value","handleSubmit","e","preventDefault","isLogin","useSelector","selectIsUserLogin","dispatch","useDispatch","data","signin","console","log","to","fields","onChange"],"sourceRoot":""}