{"version":3,"file":"static/js/272.5fd0d0e6.chunk.js","mappings":"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","sources":["redux/filters/filter-selectors.js","redux/tasks/cont-selectors.js","shared/components/Password/Password.styled.jsx","shared/utils/fields.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["export const selectFilter = ({ filter }) => filter;\r\n\r\n","import { selectFilter } from \"redux/filters/filter-selectors\";\r\n\r\nexport const selectAllContacts = state => state.contacts?.contacts;\r\n\r\nexport const selectIsLoading = state => state.contacts.loading;\r\n\r\nexport const selectError = state => state.contacts.error;\r\n\r\nexport const selectFilteredContacts = (state) => {\r\n  const contacts = selectAllContacts(state);\r\n  const filter = selectFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase() !== normalizedFilter\r\n      ? contact.name.toLowerCase().includes(normalizedFilter) ||\r\n      contact.number.includes(normalizedFilter)\r\n      : console.log('NO')\r\n  );\r\n}","import styled from '@emotion/styled';\r\nimport { OutlinedInput, TextField } from '@mui/material';\r\nimport { ButtonCss } from 'components/App/App.styled';\r\n\r\nexport const InputCss = styled(TextField)`\r\n  margin-bottom: 20px;\r\n  color: orange;\r\n  text-align: center;\r\n\r\n  &.MuiFormLabel-root {\r\n    color: orange;\r\n  }\r\n\r\n  .css-o943dk-MuiFormLabel-root-MuiInputLabel-root.Mui-focused {\r\n    color: orange;\r\n  }\r\n  .css-1ff8729-MuiInputBase-root-MuiFilledInput-root:hover:not(\r\n      .Mui-disabled,\r\n      .Mui-error\r\n    ):before {\r\n    border-bottom: 1px solid #000;\r\n  }\r\n  .css-1ff8729-MuiInputBase-root-MuiFilledInput-root:after {\r\n    border-bottom: 1px dashed orange;\r\n  }\r\n`;\r\n\r\nexport const PasswordCss = styled(OutlinedInput)`\r\n\r\n`;\r\n\r\nexport const AuthButtonCss = styled(ButtonCss)`\r\n    margin-top: 20px;\r\n`;\r\n\r\n","const fields = {\r\n  name: {\r\n    label: 'Name',\r\n    name: 'name',\r\n    variant: 'filled',\r\n    type: 'text',\r\n    placeholder: 'Enter name...',\r\n    required: true,\r\n  },\r\n  email: {\r\n    label: 'Email',\r\n    name: 'email',\r\n    variant: 'filled',\r\n    type: 'email',\r\n    placeholder: 'Enter email...',\r\n    required: true,\r\n  },\r\n  password: {\r\n    label: 'Password',\r\n    name: 'password',\r\n    variant: 'filled',\r\n    type: 'password',\r\n    placeholder: 'Enter password...',\r\n    required: true,\r\n  },\r\n  contact: {\r\n    label: 'Contact',\r\n    name: 'name',\r\n    variant: 'filled',\r\n    type: 'text',\r\n    placeholder: 'Enter the contact...',\r\n    required: true,\r\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n  },\r\n  number: {\r\n    label: 'Number',\r\n    name: 'number',\r\n    variant: 'filled',\r\n    type: 'tel',\r\n    placeholder: 'Enter the number...',\r\n    required: true,\r\n    title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n  },\r\n};\r\n\r\nexport default fields;","import styled from \"@emotion/styled\";\r\nimport { ButtonCss } from \"components/App/App.styled\";\r\n\r\nexport const ContactFormCss = styled.form`\r\n  display: flex;\r\n  row-gap: 20px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 250px;\r\n  padding: 20px;\r\n\r\n  margin-top: 100px;\r\n\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  line-height: 1;\r\n\r\n  background-color: #313131;\r\n\r\n  border-radius: 5px;\r\n\r\n  transition: box-shadow 250ms linear;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 1px 1px 1px 3px #292929;\r\n  }\r\n`;\r\n\r\nexport const ContactLabelCss = styled.label`\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap: 5px;\r\n    max-width: 300px;\r\n`\r\n\r\nexport const CreateButtonCss = styled(ButtonCss)`\r\n  &:hover,\r\n  &:focus {\r\n    background-color: green;\r\n  }\r\n`;","import toastr from 'toastr';\r\nimport { useState } from 'react';\r\nimport {\r\n  ContactFormCss,\r\n  CreateButtonCss,\r\n} from './ContactForm.styled';\r\nimport {\r\n\r\n  CenterHorizontalCss,\r\n  TitleCss,\r\n} from 'components/App/App.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAllContacts } from 'redux/tasks/cont-selectors';\r\nimport { fetchAddContacts } from 'redux/tasks/taskoperations';\r\nimport { InputCss } from 'shared/components/Password/Password.styled';\r\nimport fields from 'shared/utils/fields';\r\n\r\nconst ContactForm = () => {\r\n  const contacts = useSelector(selectAllContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    number: '',\r\n  });\r\n  const { name, number } = state;\r\n  const payload = {\r\n    name: name,\r\n    number: number,\r\n  };\r\n\r\n  // const contacts = useSelector(selectAllContacts);\r\n\r\n  const handleInputChange = e =>\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    for (let contact of contacts) {\r\n      console.log(contact);\r\n      if (contact.name.toLowerCase() === name.toLowerCase()) {\r\n        alert(`${contact.name} is already in contacts`);\r\n        return;\r\n      }\r\n      if (contact.number.toLowerCase() === number.toLowerCase()) {\r\n        alert(`${contact.number} is already in contacts`);\r\n        return;\r\n      }\r\n    }\r\n    console.log(payload);\r\n    dispatch(fetchAddContacts(payload));\r\n    toastr.success('Created!');\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    return setState({ name: '', number: '' });\r\n  };\r\n\r\n  return (\r\n    <CenterHorizontalCss>\r\n      <ContactFormCss onSubmit={handleSubmit}>\r\n        <TitleCss>Enter your contact</TitleCss>\r\n        <InputCss\r\n          {...fields.contact}\r\n          onChange={handleInputChange}\r\n          value={name}\r\n        />\r\n        <InputCss\r\n          {...fields.number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          onChange={handleInputChange}\r\n          value={number}\r\n        />\r\n        <CreateButtonCss type=\"submit\">Add to contact</CreateButtonCss>\r\n      </ContactFormCss>\r\n    </CenterHorizontalCss>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n// class ContactForm extends Component {\r\n//     state = {\r\n//         name: '',\r\n//         number: ''\r\n//     }\r\n//     handleInputChange = e => this.setState(({ [e.currentTarget.name]: e.currentTarget.value }));\r\n//     handleSubmit = e => {\r\n//       const { name, number } = this.state;\r\n//       e.preventDefault();\r\n\r\n//       for (let contact of this.props.contacts) {\r\n//       if (contact.name.toLowerCase() === this.state.name.toLowerCase()) {\r\n//         alert(`${contact.name} is already in contacts`);\r\n//         return;\r\n//         }\r\n//         if (contact.number.toLowerCase() === this.state.number.toLowerCase()) {\r\n//           alert(`${contact.number} is already in contacts`);\r\n//           return;\r\n//         }\r\n//     }\r\n//       this.reset();\r\n//       return this.props.onSubmit(name, number);\r\n//   }\r\n//   reset() {\r\n//     return this.setState({name: '', number: ''})\r\n//   }\r\n//     render() {\r\n//         return (\r\n//           <ContactFormCss onSubmit={this.handleSubmit}>\r\n//             <ContactLabelCss>\r\n//               {\" \"}\r\n//               Name:{\" \"}\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n//                 onChange={this.handleInputChange}\r\n//                 value={this.state.name}\r\n//                 required\r\n//               />\r\n//             </ContactLabelCss>\r\n//             <ContactLabelCss>\r\n//               {\" \"}\r\n//               Phone:{\" \"}\r\n//               <input\r\n//                 type=\"tel\"\r\n//                 name=\"number\"\r\n//                 pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//                 title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n//                 onChange={this.handleInputChange}\r\n//                 value={this.state.number}\r\n//                 required\r\n//               />\r\n//             </ContactLabelCss>\r\n//             <ButtonCss type=\"submit\">Add to contact</ButtonCss>\r\n//           </ContactFormCss>\r\n//         );\r\n//     }\r\n// }\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectFilter } from 'redux/filters/filter-selectors';\r\nimport { filterSlice } from 'redux/filters/filter-slice';\r\nimport { InputCss } from 'shared/components/Password/Password.styled';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(selectFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilterChange = e =>\r\n    dispatch(filterSlice.actions.settedFilter(e.target.value));\r\n\r\n  return (\r\n    <InputCss\r\n      variant=\"filled\"\r\n      label=\"Filter\"\r\n      type=\"text\"\r\n      value={filter}\r\n      onChange={handleFilterChange}\r\n      placeholder=\"Type to find...\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { lazy } from 'react';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport { ContactFlexCss } from 'components/App/App.styled';\r\n\r\nconst ContactsList = lazy(() => import('components/ContactList'));\r\n\r\nconst ContactsView = () => {\r\n  return (\r\n    <ContactFlexCss>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </ContactFlexCss>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n"],"names":["selectFilter","filter","selectAllContacts","state","contacts","selectIsLoading","loading","selectFilteredContacts","normalizedFilter","toLowerCase","contact","name","includes","number","console","log","InputCss","styled","TextField","AuthButtonCss","OutlinedInput","ButtonCss","label","variant","type","placeholder","required","email","password","pattern","title","ContactFormCss","CreateButtonCss","useSelector","dispatch","useDispatch","useState","setState","payload","handleInputChange","e","target","value","reset","onSubmit","preventDefault","alert","fetchAddContacts","toastr","fields","onChange","filterSlice","ContactsList","lazy"],"sourceRoot":""}